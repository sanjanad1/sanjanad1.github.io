{"backend_state":"init","connection_file":"/projects/4cd1c004-aa87-4c40-b1fd-5234fe1a4654/.local/share/jupyter/runtime/kernel-9363e5b8-d001-4062-a40c-cf800628092e.json","kernel":"ds_env","kernel_error":"Kernel last terminated by signal SIGKILL.","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"0e8637","input":"","pos":8,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"6c00b9","input":"","pos":11,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"a5b59a","input":"","pos":7,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"aae1c1","input":"# KNN","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"c7ed72","input":"","pos":9,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"d2e37d","input":"","pos":10,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"5c15fe","input":"X_train, X_test, y_train, y_test = train_test_split(df[['danceability', 'energy', 'key', 'loudness', 'speechiness', 'acousticness', 'instrumentalness', 'liveness', 'valence', 'tempo', 'duration_ms', 'time_signature']], pd.factorize(df['playlist'])[0], test_size=0.2)","pos":3,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"782720","input":"knn = KNeighborsClassifier(n_neighbors=9)","pos":4,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"6e5511","input":"knn.fit(X_train, y_train)","output":{"0":{"data":{"text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(n_neighbors=9)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier(n_neighbors=9)</pre></div></div></div></div></div>","text/plain":"KNeighborsClassifier(n_neighbors=9)"},"exec_count":13,"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"d523fb","input":"import numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier","output":{"0":{"ename":"ImportError","evalue":"cannot import name 'cross_validation' from 'sklearn' (/projects/4cd1c004-aa87-4c40-b1fd-5234fe1a4654/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/__init__.py)","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mImportError\u001b[0m                               Traceback (most recent call last)","Input \u001b[0;32mIn [17]\u001b[0m, in \u001b[0;36m<cell line: 5>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01msklearn\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mmodel_selection\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m train_test_split\n\u001b[1;32m      4\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01msklearn\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mneighbors\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m KNeighborsClassifier\n\u001b[0;32m----> 5\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01msklearn\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m cross_validation\n","\u001b[0;31mImportError\u001b[0m: cannot import name 'cross_validation' from 'sklearn' (/projects/4cd1c004-aa87-4c40-b1fd-5234fe1a4654/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/__init__.py)"]}},"pos":1,"type":"cell"}
{"cell_type":"code","exec_count":21,"id":"b10b99","input":"from sklearn.model_selection import cross_val_score\n\ncross_val_score(knn, X_test, y_test, scoring='accuracy')","output":{"0":{"data":{"text/plain":"array([0.0268834 , 0.02714329, 0.02847622, 0.02702211, 0.02765396])"},"exec_count":21,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"86b6c0","input":"df = pd.read_csv('../data/final_dataset.csv')\ndf.info()","output":{"0":{"name":"stdout","output_type":"stream","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 2888376 entries, 0 to 2888375\nData columns (total 26 columns):\n #   Column               Dtype  \n---  ------               -----  \n 0   playlist             object \n 1   danceability         float64\n 2   energy               float64\n 3   key                  float64\n 4   loudness             float64\n 5   speechiness          float64\n 6   acousticness         float64\n 7   instrumentalness     float64\n 8   liveness             float64\n 9   valence              float64\n 10  tempo                float64\n 11  duration_ms          float64\n 12  time_signature       float64\n 13  danceability_pl      float64\n 14  energy_pl            float64\n 15  key_pl               float64\n 16  loudness_pl          float64\n 17  speechiness_pl       float64\n 18  acousticness_pl      float64\n 19  instrumentalness_pl  float64\n 20  liveness_pl          float64\n 21  valence_pl           float64\n 22  tempo_pl             float64\n 23  duration_ms_pl       float64\n 24  time_signature_pl    float64\n 25  belongs              bool   \ndtypes: bool(1), float64(24), object(1)\nmemory usage: 553.7+ MB\n"}},"pos":2,"type":"cell"}
{"id":0,"time":1655997885648,"type":"user"}
{"last_load":1656079601827,"type":"file"}